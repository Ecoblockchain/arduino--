#!/usr/bin/perl -w

use strict;

use Carp;
use Getopt::Long;
use POSIX;

my $f_cpu;
GetOptions ("frequency=f" => \$f_cpu);

print "// Generated by $0\n\n";

# 64 is the timer0 prescale value. We could make that also configurable
# 16 is the bit width of uint16_t
my $scale16 = 16 - ceil(log(64.0 / ($f_cpu / 1000000) * 2 ** 8)/log(2));
print "#define TIMER16_MICRO_SCALE $scale16\n\n";

while (my $line = <>) {
    chomp $line;

    next if $line !~ /^\s*D\((.*?)\);$/;
    my $port = $1;

    my $val;
    do {
	$line = <>;
	chomp $line;

	if ($line =~ /ldi\tr\d+, (0x[0-9a-fA-F]+)\t;/) {
	    $val = $1;
	} elsif ($line =~ /st\tZ,/) {
	    print "#define N$port $val\n";
	} else {
	  croak $line;
      }
    } while ($line !~ /st\tZ,/);
}
